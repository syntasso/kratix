#!/usr/bin/env bash

ROOT=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )/.." &> /dev/null && pwd )

set -euo pipefail

cd $ROOT
source "$ROOT/scripts/utils.sh"

export VERSION="${VERSION:-$(commit_sha)}"

docker pull syntasso/kratix-platform-pipeline-adapter

docker pull syntasso/kratix-platform

PIPELINE_ADAPTER_VERSION_MANIFEST_DIGEST=$(skopeo --override-os linux inspect docker://docker.io/syntasso/kratix-platform-pipeline-adapter:latest | jq -r .Digest)
export PIPELINE_ADAPTER_VERSION_MANIFEST_DIGEST

KRATIX_PLATFORM_MANIFEST_DIGEST=$(skopeo --override-os linux inspect docker://docker.io/syntasso/kratix-platform:latest | jq -r .Digest)
export KRATIX_PLATFORM_MANIFEST_DIGEST

export PIPELINE_ADAPTER_IMG=syntasso.docker.scarf.sh/syntasso/kratix-platform-pipeline-adapter@${PIPELINE_ADAPTER_VERSION_MANIFEST_DIGEST}
export IMG_TAG=syntasso.docker.scarf.sh/syntasso/kratix-platform@${KRATIX_PLATFORM_MANIFEST_DIGEST}

if [ -z "${KRATIX_PLATFORM_MANIFEST_DIGEST}" ]; then
    echo "Error: KRATIX_PLATFORM_MANIFEST_DIGEST is empty"
    exit 1
fi

if [ -z "${PIPELINE_ADAPTER_VERSION_MANIFEST_DIGEST}" ]; then
    echo "Error: PIPELINE_ADAPTER_VERSION_MANIFEST_DIGEST is empty"
    exit 1
fi

make distribution

mkdir -p distribution/single-cluster

cat distribution/kratix.yaml <(echo "---") \
hack/destination/gitops-tk-install.yaml <(echo "---") \
hack/platform/minio-install.yaml > distribution/single-cluster/install-all-in-one.yaml

KRATIX_QUICKSTART_MANIFEST_DIGEST=$(skopeo --override-os linux inspect docker://docker.io/syntasso/kratix-quickstart:latest | jq -r .Digest)
export QUICKSTART_TAG=syntasso.docker.scarf.sh/syntasso/kratix-quickstart@${KRATIX_QUICKSTART_MANIFEST_DIGEST}

yq eval-all '
  select(.kind == "Deployment" and .metadata.name == "kratix-platform-controller-manager")
  |= (.spec.template.spec.containers[0].image = strenv(QUICKSTART_TAG))
  // select(.kind != "Deployment" or .metadata.name != "kratix-platform-controller-manager")
' distribution/single-cluster/install-all-in-one.yaml > distribution/single-cluster/install-all-in-one.new.yaml
mv distribution/single-cluster/install-all-in-one.new.yaml distribution/single-cluster/install-all-in-one.yaml

cat config/samples/platform_v1alpha1_worker.yaml <(echo "---") \
config/samples/platform_v1alpha1_bucketstatestore.yaml <(echo "---") \
hack/destination/gitops-tk-resources-single-cluster.yaml > distribution/single-cluster/config-all-in-one.yaml
