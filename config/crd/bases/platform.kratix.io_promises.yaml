---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: promises.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    categories:
    - kratix
    kind: Promise
    listKind: PromiseList
    plural: promises
    singular: promise
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.kind
      name: Kind
      type: string
    - jsonPath: .status.apiVersion
      name: API Version
      type: string
    - jsonPath: .status.version
      name: Version
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Promise is the Schema for the promises API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PromiseSpec defines the desired state of Promise
            properties:
              api:
                description: |-
                  API an application developers will use to request a Resource from this Promise.
                  Must be a valid kubernetes custom resource definition.
                type: object
                x-kubernetes-embedded-resource: true
                x-kubernetes-preserve-unknown-fields: true
              dependencies:
                description: A collection of prerequisites that enable the creation
                  of a Resource.
                items:
                  description: Resources represents the manifest workload to be deployed
                    on Destinations
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              destinationSelectors:
                description: A list of key and value pairs (labels) used for scheduling.
                items:
                  properties:
                    matchLabels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                type: array
              requiredPromises:
                description: |-
                  A list of Promises that are required by this Promise.
                  All required Promises must be present and available for this promise to be made available.
                items:
                  properties:
                    name:
                      description: Name of Promise
                      type: string
                    version:
                      description: Version of Promise
                      type: string
                  type: object
                type: array
              workflows:
                description: A list of pipelines to be executed at different stages
                  of the Promise lifecycle.
                properties:
                  promise:
                    properties:
                      configure:
                        items:
                          type: object
                        type: array
                        x-kubernetes-preserve-unknown-fields: true
                      delete:
                        items:
                          type: object
                        type: array
                        x-kubernetes-preserve-unknown-fields: true
                    type: object
                  resource:
                    properties:
                      configure:
                        items:
                          type: object
                        type: array
                        x-kubernetes-preserve-unknown-fields: true
                      delete:
                        items:
                          type: object
                        type: array
                        x-kubernetes-preserve-unknown-fields: true
                    type: object
                type: object
            type: object
          status:
            description: PromiseStatus defines the observed state of Promise
            properties:
              apiVersion:
                type: string
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              kind:
                type: string
              lastAvailableTime:
                format: date-time
                type: string
              observedGeneration:
                format: int64
                type: integer
              requiredBy:
                items:
                  properties:
                    promise:
                      properties:
                        name:
                          type: string
                        version:
                          type: string
                      type: object
                    requiredVersion:
                      type: string
                  type: object
                type: array
              requiredPromises:
                items:
                  properties:
                    name:
                      type: string
                    state:
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              status:
                type: string
              version:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
