apiVersion: platform.kratix.io/v1alpha1
kind: Promise
metadata:
  name: aggregate-promise
spec:
  destinationSelectors:
    - matchLabels:
        target: aggregated-yaml
  api:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: aggregates.test.kratix.io
    spec:
      group: test.kratix.io
      names:
        kind: Aggregate
        plural: aggregates
        singular: aggregate
      scope: Namespaced
      versions:
        - name: v1alpha1
          schema:
            openAPIV3Schema:
              properties:
                spec:
                  properties:
                    name:
                      type: string
                  type: object
              type: object
          served: true
          storage: true
  workflows:
    promise:
      configure:
        - apiVersion: platform.kratix.io/v1alpha1
          kind: Pipeline
          metadata:
            name: promise
          spec:
            containers:
              - name: do-commands
                image: ghcr.io/syntasso/kratix-pipeline-utility:v0.0.1
                command: ["sh"]
                args:
                  - -c
                  - |
                    set -eux
                    kubectl create namespace --dry-run=client --output=yaml aggregate-test-ns > /kratix/output/ns.yaml
    resource:
      configure:
        - apiVersion: platform.kratix.io/v1alpha1
          kind: Pipeline
          metadata:
            name: resource
          spec:
            containers:
              - name: do-commands
                image: ghcr.io/syntasso/kratix-pipeline-utility:v0.0.1
                command: ["sh"]
                args:
                  - -c
                  - |
                    set -eux
                    name=$(yq '.spec.name' /kratix/input/object.yaml)

                    kubectl create configmap ${name} --namespace=aggregate-test-ns --dry-run=client --output=yaml --from-literal=key=${name} > /kratix/output/configmap.yaml
